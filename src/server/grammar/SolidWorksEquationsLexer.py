# Generated from SolidWorksEquations.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,11,93,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,1,0,1,0,1,1,1,1,1,2,1,2,
        1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,4,7,39,8,7,11,7,12,7,40,1,7,
        1,7,4,7,45,8,7,11,7,12,7,46,3,7,49,8,7,1,8,1,8,1,8,1,8,1,8,1,8,1,
        8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,
        8,1,8,1,8,3,8,76,8,8,1,9,1,9,5,9,80,8,9,10,9,12,9,83,9,9,1,9,1,9,
        1,10,4,10,88,8,10,11,10,12,10,89,1,10,1,10,0,0,11,1,1,3,2,5,3,7,
        4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,1,0,3,1,0,48,57,1,0,34,34,
        3,0,9,10,13,13,32,32,109,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,
        1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,
        1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,1,23,1,0,0,0,3,25,1,0,0,0,5,27,
        1,0,0,0,7,29,1,0,0,0,9,31,1,0,0,0,11,33,1,0,0,0,13,35,1,0,0,0,15,
        38,1,0,0,0,17,75,1,0,0,0,19,77,1,0,0,0,21,87,1,0,0,0,23,24,5,40,
        0,0,24,2,1,0,0,0,25,26,5,41,0,0,26,4,1,0,0,0,27,28,5,61,0,0,28,6,
        1,0,0,0,29,30,5,42,0,0,30,8,1,0,0,0,31,32,5,47,0,0,32,10,1,0,0,0,
        33,34,5,43,0,0,34,12,1,0,0,0,35,36,5,45,0,0,36,14,1,0,0,0,37,39,
        7,0,0,0,38,37,1,0,0,0,39,40,1,0,0,0,40,38,1,0,0,0,40,41,1,0,0,0,
        41,48,1,0,0,0,42,44,5,46,0,0,43,45,7,0,0,0,44,43,1,0,0,0,45,46,1,
        0,0,0,46,44,1,0,0,0,46,47,1,0,0,0,47,49,1,0,0,0,48,42,1,0,0,0,48,
        49,1,0,0,0,49,16,1,0,0,0,50,51,5,109,0,0,51,76,5,109,0,0,52,53,5,
        99,0,0,53,76,5,109,0,0,54,76,5,109,0,0,55,56,5,105,0,0,56,76,5,110,
        0,0,57,58,5,102,0,0,58,76,5,116,0,0,59,60,5,121,0,0,60,76,5,100,
        0,0,61,62,5,107,0,0,62,76,5,109,0,0,63,64,5,109,0,0,64,76,5,105,
        0,0,65,66,5,110,0,0,66,76,5,109,0,0,67,68,5,117,0,0,68,76,5,109,
        0,0,69,70,5,112,0,0,70,76,5,109,0,0,71,72,5,102,0,0,72,76,5,109,
        0,0,73,74,5,97,0,0,74,76,5,109,0,0,75,50,1,0,0,0,75,52,1,0,0,0,75,
        54,1,0,0,0,75,55,1,0,0,0,75,57,1,0,0,0,75,59,1,0,0,0,75,61,1,0,0,
        0,75,63,1,0,0,0,75,65,1,0,0,0,75,67,1,0,0,0,75,69,1,0,0,0,75,71,
        1,0,0,0,75,73,1,0,0,0,76,18,1,0,0,0,77,81,5,34,0,0,78,80,8,1,0,0,
        79,78,1,0,0,0,80,83,1,0,0,0,81,79,1,0,0,0,81,82,1,0,0,0,82,84,1,
        0,0,0,83,81,1,0,0,0,84,85,5,34,0,0,85,20,1,0,0,0,86,88,7,2,0,0,87,
        86,1,0,0,0,88,89,1,0,0,0,89,87,1,0,0,0,89,90,1,0,0,0,90,91,1,0,0,
        0,91,92,6,10,0,0,92,22,1,0,0,0,7,0,40,46,48,75,81,89,1,6,0,0
    ]

class SolidWorksEquationsLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    EQUALS = 3
    MULTIPLY = 4
    DIVIDE = 5
    ADD = 6
    SUBTRACT = 7
    NUMBER = 8
    UNIT = 9
    VARIABLE = 10
    WS = 11

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "'='", "'*'", "'/'", "'+'", "'-'" ]

    symbolicNames = [ "<INVALID>",
            "EQUALS", "MULTIPLY", "DIVIDE", "ADD", "SUBTRACT", "NUMBER", 
            "UNIT", "VARIABLE", "WS" ]

    ruleNames = [ "T__0", "T__1", "EQUALS", "MULTIPLY", "DIVIDE", "ADD", 
                  "SUBTRACT", "NUMBER", "UNIT", "VARIABLE", "WS" ]

    grammarFileName = "SolidWorksEquations.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


